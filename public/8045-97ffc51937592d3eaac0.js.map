{"version":3,"file":"8045-97ffc51937592d3eaac0.js","mappings":"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","sources":["webpack://y3-dental/./node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","webpack://y3-dental/./node_modules/@emailjs/browser/es/utils/createWebStorage/createWebStorage.js","webpack://y3-dental/./node_modules/@emailjs/browser/es/store/store.js","webpack://y3-dental/./node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js","webpack://y3-dental/./node_modules/@emailjs/browser/es/methods/init/init.js","webpack://y3-dental/./node_modules/@emailjs/browser/es/api/sendPost.js","webpack://y3-dental/./node_modules/@emailjs/browser/es/utils/validateParams/validateParams.js","webpack://y3-dental/./node_modules/@emailjs/browser/es/utils/isHeadless/isHeadless.js","webpack://y3-dental/./node_modules/@emailjs/browser/es/errors/headlessError/headlessError.js","webpack://y3-dental/./node_modules/@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js","webpack://y3-dental/./node_modules/@emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js","webpack://y3-dental/./node_modules/@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js","webpack://y3-dental/./node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js","webpack://y3-dental/./node_modules/@emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js","webpack://y3-dental/./node_modules/@emailjs/browser/es/errors/limitRateError/limitRateError.js","webpack://y3-dental/./node_modules/@emailjs/browser/es/methods/send/send.js","webpack://y3-dental/./node_modules/@emailjs/browser/es/utils/validateTemplateParams/validateTemplateParams.js","webpack://y3-dental/./node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","webpack://y3-dental/./node_modules/@emailjs/browser/es/utils/validateForm/validateForm.js","webpack://y3-dental/./node_modules/@emailjs/browser/es/index.js"],"sourcesContent":["export class EmailJSResponseStatus {\n  constructor() {\n    let _status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let _text = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Network Error';\n    this.status = _status;\n    this.text = _text;\n  }\n}","export const createWebStorage = () => {\n  if (typeof localStorage === 'undefined') return;\n  return {\n    get: key => Promise.resolve(localStorage.getItem(key)),\n    set: (key, value) => Promise.resolve(localStorage.setItem(key, value)),\n    remove: key => Promise.resolve(localStorage.removeItem(key))\n  };\n};","import { createWebStorage } from '../utils/createWebStorage/createWebStorage';\nexport const store = {\n  origin: 'https://api.emailjs.com',\n  blockHeadless: false,\n  storageProvider: createWebStorage()\n};","export const buildOptions = options => {\n  if (!options) return {};\n  // support compatibility with SDK v3\n  if (typeof options === 'string') {\n    return {\n      publicKey: options\n    };\n  }\n  // eslint-disable-next-line @typescript-eslint/no-base-to-string\n  if (options.toString() === '[object Object]') {\n    return options;\n  }\n  return {};\n};","import { store } from '../../store/store';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\n/**\n * EmailJS global SDK config\n * @param {object} options - the EmailJS global SDK config options\n * @param {string} origin - the non-default EmailJS origin\n */\nexport const init = function (options) {\n  let origin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'https://api.emailjs.com';\n  if (!options) return;\n  const opts = buildOptions(options);\n  store.publicKey = opts.publicKey;\n  store.blockHeadless = opts.blockHeadless;\n  store.storageProvider = opts.storageProvider;\n  store.blockList = opts.blockList;\n  store.limitRate = opts.limitRate;\n  store.origin = opts.origin || origin;\n};","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = async function (url, data) {\n  let headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const response = await fetch(store.origin + url, {\n    method: 'POST',\n    headers,\n    body: data\n  });\n  const message = await response.text();\n  const responseStatus = new EmailJSResponseStatus(response.status, message);\n  if (response.ok) {\n    return responseStatus;\n  }\n  throw responseStatus;\n};","export const validateParams = (publicKey, serviceID, templateID) => {\n  if (!publicKey || typeof publicKey !== 'string') {\n    throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n  }\n  if (!serviceID || typeof serviceID !== 'string') {\n    throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n  }\n  if (!templateID || typeof templateID !== 'string') {\n    throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n  }\n};","export const isHeadless = navigator => {\n  return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;\n};","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const headlessError = () => {\n  return new EmailJSResponseStatus(451, 'Unavailable For Headless Browser');\n};","import { validateBlockListParams } from '../validateBlockListParams/validateBlockListParams';\nconst isBlockListDisabled = options => {\n  var _options$list;\n  return !((_options$list = options.list) !== null && _options$list !== void 0 && _options$list.length) || !options.watchVariable;\n};\nconst getValue = (data, name) => {\n  return data instanceof FormData ? data.get(name) : data[name];\n};\nexport const isBlockedValueInParams = (options, params) => {\n  if (isBlockListDisabled(options)) return false;\n  validateBlockListParams(options.list, options.watchVariable);\n  const value = getValue(params, options.watchVariable);\n  if (typeof value !== 'string') return false;\n  return options.list.includes(value);\n};","export const validateBlockListParams = (list, watchVariable) => {\n  if (!Array.isArray(list)) {\n    throw 'The BlockList list has to be an array';\n  }\n  if (typeof watchVariable !== 'string') {\n    throw 'The BlockList watchVariable has to be a string';\n  }\n};","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const blockedEmailError = () => {\n  return new EmailJSResponseStatus(403, 'Forbidden');\n};","import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = async (id, throttle, storage) => {\n  const lastTime = Number((await storage.get(id)) || 0);\n  return throttle - Date.now() + lastTime;\n};\nexport const isLimitRateHit = async (defaultID, options, storage) => {\n  if (!options.throttle || !storage) {\n    return false;\n  }\n  validateLimitRateParams(options.throttle, options.id);\n  const id = options.id || defaultID;\n  const leftTime = await getLeftTime(id, options.throttle, storage);\n  if (leftTime > 0) {\n    return true;\n  }\n  await storage.set(id, Date.now().toString());\n  return false;\n};","export const validateLimitRateParams = (throttle, id) => {\n  if (typeof throttle !== 'number' || throttle < 0) {\n    throw 'The LimitRate throttle has to be a positive number';\n  }\n  if (id && typeof id !== 'string') {\n    throw 'The LimitRate ID has to be a non-empty string';\n  }\n};","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const limitRateError = () => {\n  return new EmailJSResponseStatus(429, 'Too Many Requests');\n};","import _defineProperty from \"/Users/mahboobalam/Dev/y3-dental/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { validateTemplateParams } from '../../utils/validateTemplateParams/validateTemplateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templateParams - the template params, what will be set to the EmailJS template\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = async (serviceID, templateID, templateParams, options) => {\n  const opts = buildOptions(options);\n  const publicKey = opts.publicKey || store.publicKey;\n  const blockHeadless = opts.blockHeadless || store.blockHeadless;\n  const storageProvider = opts.storageProvider || store.storageProvider;\n  const blockList = _objectSpread(_objectSpread({}, store.blockList), opts.blockList);\n  const limitRate = _objectSpread(_objectSpread({}, store.limitRate), opts.limitRate);\n  if (blockHeadless && isHeadless(navigator)) {\n    return Promise.reject(headlessError());\n  }\n  validateParams(publicKey, serviceID, templateID);\n  validateTemplateParams(templateParams);\n  if (templateParams && isBlockedValueInParams(blockList, templateParams)) {\n    return Promise.reject(blockedEmailError());\n  }\n  if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n    return Promise.reject(limitRateError());\n  }\n  const params = {\n    lib_version: '4.4.1',\n    user_id: publicKey,\n    service_id: serviceID,\n    template_id: templateID,\n    template_params: templateParams\n  };\n  return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n    'Content-type': 'application/json'\n  });\n};","export const validateTemplateParams = templateParams => {\n  // eslint-disable-next-line @typescript-eslint/no-base-to-string\n  if (templateParams && templateParams.toString() !== '[object Object]') {\n    throw 'The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/';\n  }\n};","import _defineProperty from \"/Users/mahboobalam/Dev/y3-dental/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateForm } from '../../utils/validateForm/validateForm';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\nconst findHTMLForm = form => {\n  return typeof form === 'string' ? document.querySelector(form) : form;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = async (serviceID, templateID, form, options) => {\n  const opts = buildOptions(options);\n  const publicKey = opts.publicKey || store.publicKey;\n  const blockHeadless = opts.blockHeadless || store.blockHeadless;\n  const storageProvider = store.storageProvider || opts.storageProvider;\n  const blockList = _objectSpread(_objectSpread({}, store.blockList), opts.blockList);\n  const limitRate = _objectSpread(_objectSpread({}, store.limitRate), opts.limitRate);\n  if (blockHeadless && isHeadless(navigator)) {\n    return Promise.reject(headlessError());\n  }\n  const currentForm = findHTMLForm(form);\n  validateParams(publicKey, serviceID, templateID);\n  validateForm(currentForm);\n  const formData = new FormData(currentForm);\n  if (isBlockedValueInParams(blockList, formData)) {\n    return Promise.reject(blockedEmailError());\n  }\n  if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n    return Promise.reject(limitRateError());\n  }\n  formData.append('lib_version', '4.4.1');\n  formData.append('service_id', serviceID);\n  formData.append('template_id', templateID);\n  formData.append('user_id', publicKey);\n  return sendPost('/api/v1.0/email/send-form', formData);\n};","export const validateForm = form => {\n  if (!form || form.nodeName !== 'FORM') {\n    throw 'The 3rd parameter is expected to be the HTML form element or the style selector of the form';\n  }\n};","import { EmailJSResponseStatus } from './models/EmailJSResponseStatus';\nimport { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm, EmailJSResponseStatus };\nexport default {\n  init,\n  send,\n  sendForm,\n  EmailJSResponseStatus\n};"],"names":["EmailJSResponseStatus","constructor","_status","arguments","length","undefined","_text","this","status","text","store","origin","blockHeadless","storageProvider","localStorage","get","key","Promise","resolve","getItem","set","value","setItem","remove","removeItem","createWebStorage","buildOptions","options","publicKey","toString","init","opts","blockList","limitRate","sendPost","async","url","data","headers","response","fetch","method","body","message","responseStatus","ok","validateParams","serviceID","templateID","isHeadless","navigator","webdriver","languages","headlessError","isBlockedValueInParams","params","_options$list","list","watchVariable","isBlockListDisabled","Array","isArray","validateBlockListParams","name","FormData","includes","blockedEmailError","isLimitRateHit","defaultID","storage","throttle","id","validateLimitRateParams","leftTime","lastTime","Number","Date","now","getLeftTime","limitRateError","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","send","templateParams","reject","validateTemplateParams","location","pathname","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","currentForm","document","querySelector","findHTMLForm","nodeName","validateForm","formData","append"],"sourceRoot":""}